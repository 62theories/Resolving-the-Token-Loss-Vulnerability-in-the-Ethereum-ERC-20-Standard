import {
  time,
  loadFixture,
} from "@nomicfoundation/hardhat-toolbox/network-helpers";
import { anyValue } from "@nomicfoundation/hardhat-chai-matchers/withArgs";
import { expect } from "chai";
import { ethers } from "hardhat";
import { ERC20AddressThis, SimpleERC20 } from "../typechain-types";

describe("", function () {
  async function deployOneYearLockFixture() {
    const ONE_YEAR_IN_SECS = 365 * 24 * 60 * 60;
    const ONE_GWEI = 1_000_000_000;

    const lockedAmount = ONE_GWEI;
    const unlockTime = (await time.latest()) + ONE_YEAR_IN_SECS;

    // Contracts are deployed using the first signer/account by default
    const [owner, otherAccount] = await ethers.getSigners();

    const Lock = await ethers.getContractFactory("ERC20AddressThis");
    const token: ERC20AddressThis = await Lock.deploy("name", "symbol");

    return { token, unlockTime, lockedAmount, owner, otherAccount };
  }

  it("", async function () {
    const { token, owner } = await loadFixture(deployOneYearLockFixture);
    const [, otherAccount] = await ethers.getSigners();
    await token.transfer(otherAccount.address, 1);
  });
});
